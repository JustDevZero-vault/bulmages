#!/bin/bash

# Este script se encarga de crear bases de datos de bulmages.
# para ello precisa de dos parametros (el nombre de la base de datos a crear y el tipo de base de datos que será)
# Este script no se encarga de hacer las inserciones oportunas en la metabd.
# Aunque es una tarea muy sencilla que puede hacer posteriormente.
# PARAMETROS:
#		$1 Tipo: Texto o dialogo
#               $2 Nombre Base de Datos
#               $3 Tipo:  0.- Base (Vacia)
#			  1.- Plan Contable.
#			  2.- Juego de prueba de bulmages
#                         3.- La metabase
#		$4 Nombre de la Empresa.
#		$5 Ejercicio (ano)
#		$6 La metabase en la que se mete la empresa.
#
# Este script debe ser ejecutado como ROOT
# ----------------------------------------------------------------------------------------


#Buscamos el parametro para saber si es texto o no
if [ "$1" = "--texto" ]; then
  texto="1"
  ptexto="--texto"
else
  texto="0"
  ptexto="--dialog"
fi


function mensaje() {
   if [ ! -e /usr/bin/dialog -o $texto = 1 ]; then
      echo -e "$1"
   else
      dialog --title "Creacion Base de Datos" --backtitle "Asociación Iglues" --msgbox "$1" 10 60
   fi
}


function info() {
   if [ ! -e /usr/bin/dialog -o $texto = 1 ]; then
      echo -e "$1"
   else
      dialog  --title "Creacion Base de Datos" --backtitle "Asociación Iglues" --infobox "$1" 10 60
   fi
}

function tiempo {
  sleep 1.5
}

function linea {
   if [ ! -e /usr/bin/dialog ]; then
     echo -e "\033[32m----------------------------------------------\033[0m\n"
   fi
}

rm /tmp/errores.txt
touch /tmp/errores.txt

info "Creamos la base de datos:$2 $3"
linea
tiempo



su - postgres -c "dropdb  $2" 2>> /tmp/error.txt > /dev/null
su - postgres -c "createdb -E SQL_ASCII $2" 2>> /tmp/errores.txt > /dev/null

info "Comprobamos la existencia de PLPGSQL"
ENC="0"
if [ -e /usr/lib/postgresql/lib/plpgsql.so ]; then
   info "PostgreSQL esta bien instalado, la distribucion parece una Debian."
   tiempo
   su - postgres -c "psql $2" < crear/bulmages/bulmages_debian.pgdump 2>> /tmp/errores.txt > /dev/null
   ENC="1"
fi

if [ -e /usr/lib/pgsql/plpgsql.so ]; then
   info "PostgreSQL esta bien instalado, la distribucion parece una Mandrake."
   tiempo
   su -postgres -c "psql $2" < crear/bulmages/bulmages_mandrake.pgdump 2>> /tmp/errores.txt > /dev/null
   ENC="1"
fi

if [ "$ENC" = "0" ]; then
   LANG=`locate plpgsql.so`
   if [ $LANG ]; then
         mensaje "PostgreSQL no esta bien instalado o la distribucion no es una de las soportadas por el instalador. \
   No se ha encontrado la libreria plpgsql.so necesaria para instalar las \ bases de datos \
   Por favor, localicela e intente una instalación manual\n\n Puede que el archivo que busca este en $LANG" 
   fi
   exit 1
fi

# Creamos la base
if [ "$3" = "1" -o "$3" = "2" ]; then
   info "Importamos el esquema de base de datos de una empresa. \n"
   tiempo
   su - postgres -c "psql $2" < crear/bulmages/bulmages_schema.pgdump 2>> /tmp/errores.txt > /dev/null
else
   info "Importamos el esquema de la metabd. \n"
   tiempo
   su - postgres -c "psql $2" < crear/metabd/metabd_schema.pgdump 2>> /tmp/errores.txt > /dev/null
fi


if [ "$3" = "3" ]; then
   # Cargamos la metabase
   info "Cargamos la metabase. \n"
   tiempo
   su - postgres -c "psql $2" < crear/metabd/metabd_data.pgdump 2>> /tmp/errores.txt > /dev/null
fi


if [ "$3" = "1" -o "$3" = "2" ]; then
   # Cargamos lo minimo
   info "Cargamos el conjunto minimo de datos. \n"
   tiempo
   su - postgres -c "psql $2" < crear/bulmages/t_configuracion_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_tiposiva_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_grupo_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_cuenta_data.pgdump 2>> /tmp/errores.txt > /dev/null
fi


if [ "$3" = "2" ]; then
   # Cargamos todas las tablas que son de ejemplo.
   info "Cargamos datos adicionales. \n"
   tiempo
   su - postgres -c "psql $2" < crear/bulmages/t_canal_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_c_coste_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_diario_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_asiento_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_apunte_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_borrador_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_registroiva_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_ainteligente_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_binteligente_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_ivainteligente_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_compmasap_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_compbalance_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_balance_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_amortizacion_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_linamortizacion_data.pgdump 2>> /tmp/errores.txt > /dev/null
   su - postgres -c "psql $2" < crear/bulmages/t_ejercicios_data.pgdump 2>> /tmp/errores.txt > /dev/null
fi


#VAmos a hacer la insercion en la metabase de los datos necesarios.
if [ "$3" = "1" -o "$3" = "2" ]; then
   # Cargamos lo minimo
   info "Creamos la empresa en la MetaBase. \n"
   tiempo
   su - postgres -c "echo -e \" INSERT INTO empresa (nombre, ano, nombredb) VALUES ('$4', $5, '$2')\" | psql $6" 2>> /tmp/errores.txt   > /dev/null
   #  Hacemos una actualizacion de las bases de datos.
   su - postgres -c "echo -e \"\\pset tuples_only \n select MAX(idempresa) from empresa ;\" | psql metabd" > /tmp/listdb.lst
   for x in `tail +2 /tmp/listdb.lst`
   do
      info "Creamos los permisos necesarios. \n"
      tiempo
      su - postgres -c "echo -e \"\\pset tuples_only \n select idusuario FROM usuario ;\" | psql metabd" > /tmp/listuser.lst
      for y in `tail +2 /tmp/listuser.lst`
      do
	    su - postgres -c " echo \"INSERT INTO usuario_empresa (idusuario,idempresa) VALUES ($y, $x)\" | psql $6 "  2>> /tmp/errores.txt >> /tmp/errores.txt
	    info "Damos permisos a $y, $x. \n"
      done
      linea
   done
fi

DBS=`cat /tmp/errores.txt | grep ERROR`
if [ "$DBS" ]; then
   mensaje "Se han producido errores al instalar la base de datos $2 \n Se abortará la instalacion. Para mas informacion consulte en bulmages@bulma.net. \n"
   source ../deinstallbulmages $ptexto
   exit 1
else
   info "La instalacion de la base de datos $2 ha sido un exito. \n"
fi