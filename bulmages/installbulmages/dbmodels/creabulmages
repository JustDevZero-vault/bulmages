#!/bin/bash
#  (C) Tomeu Borrás Riera, Setiembre 2004
# Lo ejecuta un usuario con privilegios para crear bases de datos. Si no no funciona.
#
# Este script se encarga de crear bases de datos de bulmages.
# para ello precisa de dos parametros (el nombre de la base de datos a crear y el tipo de base de datos que será)
# Este script no se encarga de hacer las inserciones oportunas en la metabd.
# Aunque es una tarea muy sencilla que puede hacer posteriormente.
# PARAMETROS:
#               $1 Tipo: Texto o dialogo
#               $2 Nombre Base de Datos
#               $3 Tipo:  0.- Base (Vacia)
#                         1.- Plan Contable.
#                         2.- Juego de prueba de bulmages
#               $4 Nombre de la Empresa.
#               $5 Ejercicio (ano)
#
# La diferencia entre este script y el anterior es que este no hace falta que se ejecute como ROOT
# ------------------------------------------------------------------------------------------------


#Buscamos el parametro para saber si es texto o no
if [ "$1" = "--texto" ]; then
  texto="1"
  ptexto="--texto"
else
  texto="0"
  ptexto="--dialog"
fi

#Si el número de parametros no es el correcto salimos con un mensaje de error.
if [ "$5" = "" ]; then
   echo "creabulmages (--texto | --dialog) nombre (0 | 1 | 2) nomempresa ejercicio"
   exit
fi


function mensaje() {
   if [ ! -e /usr/bin/dialog -o $texto = 1 ]; then
      echo -e "$1"
   else
      dialog --title "Creación Base de Datos" --backtitle "Asociación Iglues" --msgbox "$1" 15 60
   fi
}


function info() {
   if [ ! -e /usr/bin/dialog -o $texto = 1 ]; then
      echo -e "$1"
   else
      dialog  --title "Creación Base de Datos" --backtitle "Asociación Iglues" --infobox "$1" 10 60
   fi
}

function tiempo {
  sleep 1.5
}

function linea {
   if [ ! -e /usr/bin/dialog ]; then
     echo -e "\033[32m----------------------------------------------\033[0m\n"
   fi
}

# Para que no se mezclen multiples ejecuciones borramos el sistema de errores.
if [ -e /tmp/errores1.txt ]; then
    rm /tmp/errores1.txt
fi
touch /tmp/errores1.txt


#Nos situamos en el directorio correcto. Este script no funciona si no estamos en dbmodels.
cd /usr/share/bulmages/dbmodels


info "Creamos la base de datos:$2 \n $4"
linea
tiempo

dropdb  $2 2>> /tmp/error.txt > /dev/null
createdb -E SQL_ASCII $2 2>> /tmp/errores1.txt > /dev/null

info "Comprobamos la existencia de PLPGSQL"
ENC="0"
if [ -e /usr/lib/postgresql/lib/plpgsql.so ]; then
   info "PostgreSQL esta bien instalado, la distribución parece una Debian o una Gentoo."
   tiempo
   psql $2 < crear/bulmages/bulmages_debian.sql 2>> /tmp/errores1.txt > /dev/null
   ENC="1"
fi

# Pruebas para mandrake
if [ -e /usr/lib/pgsql/plpgsql.so ]; then
   info "PostgreSQL esta bien instalado, la distribución parece una Mandrake."
   tiempo
   psql $2 < crear/bulmages/bulmages_mandrake.sql 2>> /tmp/errores1.txt > /dev/null
   ENC="1"
fi

#Pruebas para SUSE
if [ -e /usr/lib/postgresql/plpgsql.so ]; then
   LANG="/usr/lib/postgresql/plpgsql.so"
   LENG=`echo "$LANG"  | sed -e 's#\/#\\\/#g'`
   info "PostgreSQL esta bien instalado, la distribución parece una SUSE."
   tiempo
   cat crear/bulmages/bulmages_generica.sql | sed -e "s#__REPLACE__#$LENG#g" > /tmp/bulmages_generica.sql
   psql $2 < /tmp/bulmages_generica.sql 2>> /tmp/errores1.txt > /dev/null
   ENC="1"
fi

if [ -e /usr/lib/postgresql/8.0/lib/plpgsql.so ]; then
   LANG="/usr/lib/postgresql/8.0/lib/plpgsql.so"
      LENG=`echo "$LANG"  | sed -e 's#\/#\\\/#g'`
      mensaje "No se ha encontrado plpgsql.o en los sitios mas usuales, se ha encontrado dicho archivo en $LANG. Intentando la instalacion con dicho archivo"
      tiempo
      cat crear/bulmages/bulmages_generica.sql | sed -e "s#__REPLACE__#$LENG#g" > /tmp/bulmages_generica.sql
      psql $2 < /tmp/bulmages_generica.sql 2>> /tmp/errores1.txt > /dev/null
      ENC="1"
fi



# Al no encontrarse ninguna de las distribuciones hacemos una búsqueda euristica.
if [ "$ENC" = "0" ]; then
   LANG=`locate plpgsql.so`
   if [ $LANG ]; then
      LENG=`echo "$LANG"  | sed -e 's#\/#\\\/#g'`
      mensaje "No se ha encontrado plpgsql.o en los sitios mas usuales, se ha encontrado dicho archivo en $LANG. Intentando la instalacion con dicho archivo"
      tiempo
      cat crear/bulmages/bulmages_generica.sql | sed -e "s#__REPLACE__#$LENG#g" > /tmp/bulmages_generica.sql
   else
      mensaje "PostgreSQL no esta bien instalado o la distribucion no es una \n de las soportadas por el instalador. \
   No se ha encontrado la libreria plpgsql.so necesaria para instalar las \n bases de datos
   Por favor, localicela e intente una instalacion manual\n"
      exit 1
   fi
fi

# Creamos la base importando sólo tablas, triggers y funciones
if [ "$3" = "1" -o "$3" = "2" ]; then
   info "Importamos el esquema de base de datos de una empresa. \n"
   tiempo
   psql $2 < crear/bulmages/bulmages_schema.sql 2>> /tmp/errores1.txt > /dev/null
fi


if [ "$3" = "1" -o "$3" = "2" ]; then
   # Cargamos lo minimo, para dejar la empresa con un plan contable vacio.
   info "Cargamos el conjunto mínimo de datos. \n Plan contable simple. \n"
   psql $2 < crear/bulmages/t_configuracion_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_grupo_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_cuenta_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_fpago_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_tipoiva_data.sql 2>> /tmp/errores1.txt > /dev/null
   tiempo
fi


if [ "$3" = "2" ]; then
   # Cargamos todas las tablas que son de ejemplo.
   info "Cargamos datos adicionales. \n Ejemplo. \n"
   psql $2 < crear/bulmages/t_ejercicios_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_cuenta_data1.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_canal_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_c_coste_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_diario_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_asiento_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_apunte_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_borrador_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_registroiva_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_ainteligente_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_binteligente_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_compmasap_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_compbalance_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_balance_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_amortizacion_data.sql 2>> /tmp/errores1.txt > /dev/null
   psql $2 < crear/bulmages/t_linamortizacion_data.sql 2>> /tmp/errores1.txt > /dev/null
   tiempo
fi


#Ponemos el nombre que corresponde
info "Realizando configuraciones adicionales. \n"
echo "UPDATE configuracion SET valor='$4' WHERE nombre='NombreEmpresa';" | psql $2 >/dev/null
tiempo

DBS=`cat /tmp/errores1.txt | grep ERROR`
if [ "$DBS" ]; then
   mensaje "Se han producido errores al instalar la base de datos $2 \n Se abortará la instalación. Para mas información consulte en bulmages@bulma.net. \n"
   dropdb $2
   exit 1
else
   info "La instalación de la base de datos $2 $4 ha sido un éxito. \n"
  if [ -e /tmp/errores1.txt ]; then
    rm /tmp/errores1.txt
  fi
  if [ -e /tmp/bulmages_generica.sql ]; then
    rm /tmp/bulmages_generica.sql
  fi
fi

