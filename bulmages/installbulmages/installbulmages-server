#!/bin/bash
###############################################################################
# Script de instalaciï¿œ de BulmaGï¿œ
# (C) Tomeu Borrï¿œ, y Rene Merou Septiempbre 2004
# Este documento es GPL
#------------------------------------------------------------------------------
# Parametros
#     $1 : --texto
#          --dialog (por defecto)
###############################################################################


# Primeros pinitos con archivos de Debian
#. /usr/share/debconf/confmodule
#db_version 2.0
#db_input low foo/bar || true
#db_go || true

version="v0.5.9 - server"
direj=$(pwd)


#Buscamos el parametro para saber si es texto o no
if [ "$1" = "--texto" ]; then
  texto="1"
  ptexto="--texto"
else
  texto="0"
  ptexto="--dialog"
fi

#Borramos antiguos archivos que puedan dar problemas
if [ -e /tmp/errores.txt ]; then
   rm -f /tmp/errores.txt
fi
if [ -e /tmp/listdb.lst ]; then
   rm -f /tmp/listdb.lst
fi
if [ -e /tmp/listuser.lst ]; then
   rm -f /tmp/listuser.lst
fi
if [ -e /tmp/error.txt ]; then
   rm -f /tmp/error.txt
fi


# Esta funcion presenta mensajes por pantalla
function mensaje() {
   if [ ! -e /usr/bin/dialog -a ! -e /usr/bin/xdialog -o $texto = 1 ]; then
      echo -e "$2" "$1"  "$3"
   elif [ -e /usr/bin/xdialog ]; then
      xdialog --title "Instalacion de BulmaGes v0.5.1" --backtitle "Asociacion Iglues" --msgbox "$1" 10 60
   else
      dialog --title "Instalacion de BulmaGes v0.5.1" --backtitle "Asociacion Iglues" --msgbox "$1" 10 60
   fi
}

# Esta funcion presenta mensajes.
function info() {
   if [ ! -e /usr/bin/dialog -a ! -e /usr/bin/xdialog -o $texto = 1 ]; then
      echo -e  "$2" "$1"  "$3"
   elif [ -e /usr/bin/xdialog ]; then
      xdialog --title "Instalacion de BulmaGes v0.5.1" --backtitle "Asociacion Iglues" --infobox "$1" 10 60
   else
      dialog --title "Instalacion de BulmaGes v0.5.1" --backtitle "Asociacion Iglues" --infobox "$1" 10 60
   fi
}

#Esta funcion crea usuarios que van a manejar la base de datos.
function lee() {
   if [ ! -e /usr/bin/dialog -a ! -e /usr/bin/xdialog -o $texto = 1 ]; then
      echo -e  "\033[33m""Indique el usuario que va a trabajar normalmente con el programa:"  "\033[0m"
      read user
   elif [ -e /usr/bin/xdialog ]; then
      xdialog --title "Instalacion de BulmaGes v0.5.1" --inputbox "Nombre del usuario que va a trabajar normalmente con BulmaGes. \n deje el campo en blanco para terminar." 10 60  2>/tmp/dialog.ans
      user=`cat /tmp/dialog.ans`
      rm -f /tmp/dialog.ans # don't litter !
   else
      xdialog --title "Instalacion de BulmaGes v0.5.1" --inputbox "Nombre del usuario que va a trabajar normalmente con BulmaGes. \n deje el campo en blanco para terminar." 10 60  2>/tmp/dialog.ans
      user=`cat /tmp/dialog.ans`
      rm -f /tmp/dialog.ans # don't litter !
   fi
   while [ "$user" != "" ]
   do
      su - postgres -c "createuser --adduser --createdb $user"
      if [ ! -e /usr/bin/dialog -a ! -e /usr/bin/xdialog -o $texto = 1 ]; then
         echo -e  "\033[33m""Indique el usuario que va a trabajar normalmente con el programa:"  "\033[0m"
         read user
      elif [ -e /usr/bin/xdialog ]; then
         dialog --title "Instalacion de BulmaGes v0.5.1" --inputbox "Nombre del usuario que va a trabajar normalmente con BulmaGes. \n deje el campo en blanco para terminar." 10 60  2>/tmp/dialog.ans
         user=`cat /tmp/dialog.ans`
         rm -f /tmp/dialog.ans # don't litter !
      else
         dialog --title "Instalacion de BulmaGes v0.5.1" --inputbox "Nombre del usuario que va a trabajar normalmente con BulmaGes. \n deje el campo en blanco para terminar." 10 60  2>/tmp/dialog.ans
         user=`cat /tmp/dialog.ans`
         rm -f /tmp/dialog.ans # don't litter !
      fi
   done
}

function tiempo {
  sleep 1.5
}

function linea {
   if [ ! -e /usr/bin/dialog -a ! -e /usr/bin/xdialog -o $texto = 1 ]; then
     echo -e "\033[32m----------------------------------------------\033[0m\n"
   fi
}


function instalararchivos {
   # Hacemos una insercion inicial de las bases de datos.
   info "Inicializando directorio /usr/share/bulmages.\n"
   tiempo
   if [ ! -e /usr/share/bulmages ]; then
      mkdir /usr/share/bulmages
   fi

   info "Instalando archivos de revision del archivo de configuracion. \n"
   tiempo
   cp rev-* /usr/share/bulmages

   info "Instalando archivos de ayuda del programa, imagenes, iconos, listados y traducciones. \n"
   tiempo
   cp -r dbmodels /usr/share/bulmages
   cp -r ayuda /usr/share/bulmages
}

# Comprobamos que estamos ejecutando como root el programa
if [ ! $(whoami) = "root" ]; then
   mensaje "Este script de instalacion debe ejecutarse como root. \n"
   exit 1
fi


# Iniciamos el tema de los errores.
if [ -e /tmp/errores.txt ]; then
    rm -f /tmp/errores.txt
fi

#Comprobamos que estamos en el directorio adecuado
if [ ! -e ./installbulmages-server ]; then
 mensaje "Directorio incorrecto. La instalacion debe ejecutarse desde el directorio donde se encuentra el script. \n"
 exit 1
fi


# Distinguimos entre una instalacion y una actualización
info "Comprobando la existencia de versiones anteriores. \n" "\033[32m" "\033[0m"
tiempo
if [ -e /etc/bulmages-server.conf ]; then
   info "Creando el directorio /tmp/backup para guardar copias de seguridad de las bases de datos. \n"
   tiempo
   if [ -e /tmp/backup ]; then
      info "El directorio /tmp/backup ya existe. \n"
      linea
   else
      mkdir /tmp/backup
      chmod a+rw /tmp/backup
   fi

   # Tratando base de datos de bulmacont.
   LIST_DATABASES=`su - postgres -c "psql -l -t"`
   for database in $LIST_DATABASES
   do
   # info "Procesando base de datos $database"
   # Aplicando parches de BulmaCont
      for j in `ls dbmodels/actualizar | grep rev- | sort 2> /dev/null`
      do
         # info "Comprobando la existencia de /usr/share/bulmages/$j"
         if [ ! -e /usr/share/bulmages/dbmodels/actualizar/$j ]; then
            # info "Comprobamos tipo de la base de datos $database"
            TIPO=`su - postgres -c "psql -t $database -c \"SELECT valor FROM configuracion WHERE nombre='Tipo'\"" 2> /dev/null`
            if [ "$TIPO" = " BulmaCont" ]; then
               info "Aplicamos parche $direj/$j a $database"
               su - postgres -c "pg_dump $database > /tmp/backup/$database.pgdump"
               su - postgres -c "psql $database < $direj/dbmodels/actualizar/$j > /dev/null" 
               tiempo
            fi
         fi
         done

         # info "Procesando base de datos $database"
         # Aplicando parches de BulmaFact
         for j in `ls dbmodels/actualizar | grep revf- | sort 2> /dev/null`
         do
            if [ ! -e /usr/share/bulmages/dbmodels/actualizar/$j ]; then
               # info "Comprobamos tipo de la base de datos $database"
               TIPO=`su - postgres -c "psql -t $database -c \"SELECT valor FROM configuracion WHERE nombre='Tipo'\"" 2> /dev/null`
               if [ "$TIPO" = " BulmaFact" ]; then
                  info "Aplicamos parche $direj/$j a $database"
                  su - postgres -c "pg_dump $database > /tmp/backup/$database.pgdump"
                  su - postgres -c "psql $database < $direj/dbmodels/actualizar/$j > /dev/null" 
                  tiempo
               fi
            fi
         done
      done 

      instalararchivos

      # Presentamos los errores acaecidos
      cat /tmp/errores.txt | grep ERROR
   else
      instalararchivos

      info "Creando bases de datos del sistema y empresas de ejemplo. \n"
      tiempo

      # Creamos las bases de datos para bulmacont.
      su - postgres -c "/usr/share/bulmages/dbmodels/creabulmacont $ptexto bulmacont 2 BulmaCont 2006"
      su - postgres -c "/usr/share/bulmages/dbmodels/creabulmacont $ptexto bgplangcont 1 \"Plan Contable Vacio\" 2006"
      
      # Creamos las bases de datos para bulmafact.
      su - postgres -c "/usr/share/bulmages/dbmodels/creabulmafact $ptexto bulmafact 2 \"Facturacion Vacia\" 2006 metabd"
      
      # Tratamos el archivo de configuracion
      info "Instalando la nueva version del archivo de configuracion. \n"
      touch /etc/bulmages-server.conf
      
      # Presentamos los errores acaecidos
      if [ -e /tmp/errores.txt ]; then
         cat /tmp/errores.txt | grep ERROR
      fi
      
      # Dejamos que la inserciï¿œ del usuario la haga una funciï¿œ y asi encapsulamos un poco.
      lee
   fi

   mensaje "INSTALACION FINALIZADA CON EXITO" "\033[32m" "\033[0m"

