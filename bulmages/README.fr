========================================
Logiciel de Gestion d'entreprise BulmaGés
(C) 2003 - 2010 Asociación IGLUES
http://www.iglues.org

========================================
#README.fr

BulmaGés 0.12.0 (janvier 2011)

Contenu
---------

- Introduction
- Caractéristique
- Requierement
- Structure desrépertoires
- Construire la suite
- Mode de fonctionement
- Bugs, commentaires, problèmes, etc
- Code spécifique ou non libre

Introduction
============

BulmaGés est une application modulaire prétendant couvrir tous les besoins nécessaires de gestion d'entreprise petite et moyenne, en logiciel libre. On peut identifier clairement quatre domaines dans lequels le logiciel peut être utiliser : 
a) Comptabilité - BulmaCont
b) Facturacion  - BulmaFact
c) Terminal Point de Vente - BulmaTPV

Depuis cette période (Mai 2009), l'applicación de comptabilité (BulmaCont), facturacion (BulmaFact) yet le terminal Pont de Vente (BulmaTPV) sont déja opérationnels.

Caractéristique
===============

Bien que toutes les applications soient pensées pour fonctionner ensemble, leur modularité leurs permettent de fonctionner indépendement l'une de l'autre, facilitant ainsi la migration progressive des autres applications ou d'adopter seulement les outils qui intérêssent l'entreprise. BulmaGés est un logiciel libre selon la license GPL, qu'on peut obtenir, soit en programmes sources, ou bien gratuitement par Internet avec les différentes distributions (CD) mise à disposition par l'association IGLUES. 



Requièrements
==============


Afin de pouvoir utiliser BulmGés, il suffit de le compiler et réaliser une installation (Notes du traducteur : en ce moment même j'essaie de régler les problèmes de configuration). On peut l'essayer sans installer le logiciel mais c'est seulement bon pour les développeurs. Toute la suite à besoin d'une base de données, concrètement c'est PostgreSQL.

Pour compiler les sources on a besoin de :

- bibliothèque Qt4, minimum version 4.3 http://www.qtsoftware.com/downloads.
C'est la biliothèque des widgets et de l'interface graphique. 

- python et pyqt4. python 2.4  et le port pyqt4 en accord avec la version de Qt
installée. 

- cmake, mínimum version 2.4.8 http://www.cmake.org/HTML/index.html. C'est l'outils de compilation du logiciel.

- libpq et postgresql. On a besoin au minimum de PostgreSql 8.1. Pour compiler l'application on a besoin de libpq, bibliothèque d'accès à une base de données PostgreSql. Et bien entendu de PostgreSql pour exécuter l'application. http://www.postgresql.org/download/

Pour la partie greffons on a besoin d'autres composants aditionnels.

- python-psycopg2 pour exécuter correctement bulmasetup.

- python-reportlab pour générer quelques informations.

- python-ooolib et ooolib-perl pour les greffons qui générent les documents au format openoffice.


Structure des répertoires
=========================

Ce sont les répertoires principaux du svn et leurs explications respectives.

- bulmalib
Il ya quelques librairies qui sont communes à plusieurs projets. L'accès à PostgreSql et à la configuration de quelques widgets spécifiques. Elles sont les librairies principales de la suite.

- bulmages
Contient le lanceur du programme.

- bulmacont
Répertoire du programme de comptabilité bulmacont.
 
- bulmasetup
Répertoire du programme de configuration bulmasetup, afin de configurer celui-ci.

- bulmafact
Répertoire du programme de facturation bulmafact.                  

- installbulmages
Dans ce répertoire, on trouve ce qui manque pour installer la suite. Fichiers de configuration, etc...

- scripts
Contient les scripts utiles au programmeur.

- images
Contient les images (curseurs) qui sont utilisés dans le fichier bulmages.qrc
comme les icônes de programmes.

- ModulesCMake 
Compilateur CMake pour construire la suite.

- doc
Documentacion de la suite.


Construire la suite
==================

Se puede obtener de varias manera el directorio con el código fuente de la
suite. Sea descargandose el comprimido (tar.bz2, tar.gz, tgz, zip, etc) o
haciendo un checkout del repositorio subversion: 

svn checkout http://svn.berlios.de/svnroot/repos/bulmages/trunk/bulmages 

Dentro del directorio hay que hacer:

1) mkdir build
2) cd build
3) cmake ../
4) make

Hasta aquí, si todos los requerimientos han sido completados, la suite debería
compilarse sin problemas. Si sólo desea compilar una parte del programa puede
entrar dentro del directorio correspondiente y compilar ejecutando make. Pero
tenga en cuenta que hay una parte mínima que necesita compilar.


5) make install
Instala el software en /usr/local (plataformas Unix),
en %PROGRAMFILES%\bulmages\ en MSWindows.

Notas para la instalación:

El programa depende de ciertos archivos en /etc/bulmages para ejecutarse
correctamente.

Cuando se está desarrollando es engorroso reinstalar para comprobar el
correcto funcionamiento del programa.

En dicho caso, es útil cambiar en la instalación los siguientes archivos
por soft links a los ejecutables y librerías resultantes en nuestro directorio
de compilación.

OJO:
Este es un proceso delicado. Si no se comprende bien, es mejor dejarlo estar.

Antes de hacer esto, hay que realizar una primera instalación para que se generen,
entre otras cosas, los plugins y el directorio de configuración.

Estos son los archivos que se deben enlazar con los binarios que se vayan compilando:
/usr/local/lib/libbulmacont.so.X.Y.Z
/usr/local/lib/libbulmafact.so.X.Y.Z
/usr/local/lib/libbulmalib.so.X.Y.Z
/usr/local/lib/libbulmages.so.X.Y.Z
/usr/local/lib/libbulmatpv.so.X.Y.Z
/usr/local/bin/bulmacont
/usr/local/bin/bulmafact
/usr/local/bin/bulmages
/usr/local/bin/bulmatpv

Además, hay que reemplazar los libpluginb...so.X.Y.Z por enlaces simbólicos a los
plugins sobre los que vayamos a trabajar. Enlazarlos todos sería demasiado laborioso.

De esta forma, siempre se puede tener en ejecución una versión en desarrollo.
Pero teniendo cuidado con los plugins sobre los que se trabaja en cada momento.


Puesta en marcha
================

Una vez instalada la suite se tiene que poner en marcha las bases de datos, los
usuarios y las empresas. Este proceso se puede realizar principalmente de dos
formas: utilizando bulmasetup o de forma manual.

1) bulmasetup

BulmaSetup es un aplicativo que ayuda a realizar la puesta en marcha de la
suite,
- dando de alta usuarios a la base de datos
- creando empresas para la contabilidad, facturación/tpv
- realizando copias de seguridad.

Se necesitan privilegios de superusuario de postgres para poder ejecutar este
aplicación. En una instalación típica de GNU/Linux, se ejecuta com permisos de
root, sea con sudo o desde un terminal root.

2) de forma manual

En el directorio share/bulmages/examples hay una serie de scripts que pueden
servir de ejemplo de cómo dar de alta a un usuario, crear una empresa y
realizar las tareas típicas de gestión del programa.


Bugs, comentarios, problemas, etc
=================================

Si tiene algún comentario, sugerencia, error encontrado, lo mejor que puede
hacer es informar a los desarrolladores. Para hacerlo puede:

- subscribirse a la llista de correo de BulmaGés:
http://llistes.bulma.net/mailman/listinfo/bulmages

lista de tráfico medio donde los desarrolladores y la gente del proyecto
utilizan para intercambiar noticias, dudas, etc sobre BulmaGés.

- poner un bug en el sistema de gestión de bugs de Berlios.

http://developer.berlios.de/bugs/?func=browse&group_id=4472

*ha de estar dado de alta como usuario de Berlios.

Código específico o no liberado
===============================

Puede crear sus propios plugins de proyecto. Recuerde que BulmaGés está
liberado bajo licencia GPL y por tanto sus plugins también lo serán. Ahora
bien, usted no está obligado a hacer públicos sus plugins, por mucho que a
nosotros nos gustaría.

El proyecto BulmaGés tiene como fin promocionar el software libre al nivel de
gestión empresarial y poder fomentar la pequeña industria "local" en este
ámbito. Cree un plugins de personalizaciones para cada uno de sus clientes
y ofrezca un servicio de mantenimiento compilando las últimas versiones de
la suite con sus plugins especificos.

Si tiene código "privado", añadalo creando un fichero CMakeLists.txt.private,
apuntando a los directorios que necesite. De esta forma sus plugins se
compilaran junto con todo el programa, incluso podrá actualizar el repositorio
del programa y mantener sus desarrollos particulares actualizados en todo
momento sin tener que realizar complicadas gestiones.
