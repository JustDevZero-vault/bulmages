# -*- coding: utf-8 -*-

import sys
import os
from config import *
from PyQt4 import QtCore, QtGui
from PyQt4.QtGui import *
from PyQt4.QtCore import *
from plugins import PluginsBulmaSetup
from contabilidad import Contabilidad
from modificarusuario import ModificarUsuario
import plugins
import functions

class ModificarContabilidad(Contabilidad):
    def __init__(self, database, parent = None):
        Contabilidad.__init__(self,database, parent)
        # Establecemos cual va a ser la base de datos con la que trabajaremos todo el rato
        self.conectar(self.database)
        self.nombre = self.executeone('SELECT valor FROM configuracion where nombre =\'NombreEmpresa\'')
        self.databaserevision = self.executeone('SELECT valor FROM configuracion where nombre =\'DatabaseRevision\'')
        self.desconectar()
        self.mui_nomempresa.setText(self.nombre[0])
        self.mui_databaserevision.setText(self.databaserevision[0])
        self.mui_nomdb.setText(self.database)

    def on_mui_hacerbackup_released(self):
        # Ponemos la pestanya de consola como la visible
        self.tabWidget.setCurrentIndex(2)

        self.mui_textBrowser.clear()

        self.writecommand("===== Backup =====<br>")
        #functions.pg_dump +  ' -f ' + '@BULMAGES_CONFIG_DIR@/' + self.database + '.sql ' + self.database
        self.command = functions.pg_dump + ' -f ' + '@BULMAGES_CONFIG_DIR@' + self.database + '.sql ' + self.database
        self.writecommand(self.command)
        self.process.start(self.command)
        self.process.waitForFinished(-1)
        self.writecommand(self.process.readAllStandardOutput())


        self.directorio = QFileDialog.getExistingDirectory(self, "Selecciona la carpeta de destino del Backup",plugins.homedir)
        self.confcont = 'bulmacont_' + self.database + '.conf'

        if os.path.exists('@BULMAGES_CONFIG_DIR@/' + self.confcont):
            self.writecommand('Buscando archivo de configuracion: ' + plugins.configfiles + self.confcont + '<br>')
        else:
            self.writecommand('<font color =\"#FF0000\">No existe el archivo de configuracion: ' + plugins.configfiles + self.confcont + '</font>')

        self.writecommand('Empaquetando archivos de configuracion y datos de la BD<br>')
        functions.multios().compress(list([plugins.configfiles + self.confcont, plugins.configfiles + self.database + '.sql']), str(self.directorio + '/' + self.database + '.tar.gz'))

        self.writecommand("===== Backup Guardado Satisfactoriamente En : " + self.directorio + ' =====<br><br>')

        os.remove(str('@BULMAGES_CONFIG_DIR@/' + self.database + '.sql'))
        self.writecommand('Eliminando archivos temporales')
        self.process.start(self.command)
        self.process.waitForFinished(-1)

    def on_mui_aceptar_released(self):
        # Ponemos la pestanya de consola como la visible
        self.tabWidget.setCurrentIndex(1)

        if (self.mui_actualizarDB.checkState() == Qt.Checked ):
            self.actualizarDatabase()
        self.mui_textBrowser.clear()
        self.actualizarPlugins()
        self.writeConfig()

    def on_mui_permisos_released(self):
        win = ModificarUsuario()
        win.exec_()

def main(args):
    app=QtGui.QApplication(args)
    win=ModificarContabilidad('bulmacont')
    win.exec_()
    sys.exit(app.exec_())

if __name__=="__main__":
    main(sys.argv)
